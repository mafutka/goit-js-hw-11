{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"49679717-f5eb164bef18f43bdb971e28c\";\n\nexport function getImagesByQuery(query) {\n    return axios(\"https://pixabay.com/api/\", {\n        params: {\n            key: API_KEY,\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: true,\n            per_page: 9,\n        }\n    })\n}\n\n\n// У файлі pixabay-api.js зберігай функції для виконання HTTP-запитів:\n\n// getImagesByQuery(query). \n// Ця функція повинна приймати один параметр query (пошукове слово, яке є рядком), \n// здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst imageList = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\nlet lightbox = null;\n\nfunction createImageCard(image) {\n    const shortAlt = image.tags.split(',').slice(0, 3).join(', ');\n    return `\n    <li class=\"gallery-item\">\n        <a href=\"${image.largeImageURL}\" class=\"gallery-link\">\n            <img\n                class=\"gallery-image\"\n                src=\"${image.webformatURL}\"\n                alt=\"${shortAlt}\"\n            />\n            <div class=\"info\">\n                <div class=\"info-item\">\n                    <p class=\"info-label\">Likes</p>\n                    <span class=\"info-value\">${image.likes}</span>\n                </div>\n                <div class=\"info-item\">\n                    <p class=\"info-label\">Views</p>\n                    <span class=\"info-value\">${image.views}</span>\n                </div>\n                <div class=\"info-item\">\n                    <p class=\"info-label\">Comments</p>\n                    <span class=\"info-value\">${image.comments}</span>\n                </div>\n                <div class=\"info-item\">\n                    <p class=\"info-label\">Downloads</p>\n                    <span class=\"info-value\">${image.downloads}</span>\n                </div>\n            </div>\n        </a>\n    </li>\n    `;\n}\n\nexport function createGallery(images) {\n    const createMurkup = images.map(createImageCard).join('');\n    imageList.insertAdjacentHTML('beforeend', createMurkup);\n\n    if (lightbox) {\n        lightbox.refresh();\n    } else {\n        lightbox = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n    }\n}\n\nexport function clearGallery() {\n    imageList.innerHTML = '';\n    if (lightbox) {\n        lightbox.destroy();\n        lightbox = null;\n    }\n}\n\nexport function showLoader() {\n    loader.classList.remove(\"hidden\");\n}\n\nexport function hideLoader() {\n    loader.classList.add(\"hidden\");\n}\n\n\n\n// У файлі render-functions.js створи екземпляр SimpleLightbox для роботи з модальним вікном \n// та зберігай функції для відображення елементів інтерфейсу:\n\n// createGallery(images). Ця функція повинна приймати масив images, \n// створювати HTML-розмітку для галереї, \n// додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). \n// Нічого не повертає.\n// clearGallery(). Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. \n// Нічого не повертає.\n// showLoader(). Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. \n// Нічого не повертає.\n// hideLoader(). Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. \n// Нічого не повертає.","\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { getImagesByQuery } from \"./js/pixabay-api\";\nimport { createGallery, clearGallery, showLoader, hideLoader } from \"./js/render-functions\";\n\nconst form = document.querySelector(\".form\");\nconst searchInput = document.querySelector(\".input\");\n\n\nform.addEventListener('submit', handleSubmit);\n\n\nfunction handleSubmit(event) {\n   event.preventDefault();\n   const enteredInput = searchInput.value.trim();\n\n\n   if (!enteredInput) {\n       iziToast.warning({\n           position: 'topRight',\n           title: 'Warning',\n           message: 'Please enter a search query',\n       });\n       searchInput.focus();\n       return;\n   }\n\n\n   showLoader();\n   clearGallery();\n\n\n   getImagesByQuery(enteredInput)\n       .then(response => {\n           return response.data;\n       })\n       .then(response => {\n           if (!response.hits || response.hits.length === 0) {\n               iziToast.warning({\n                   position: 'topRight',\n                   title: 'Warning',\n                   message: 'Sorry, no images found. Please try another query!',\n               });\n               return;\n           }\n           createGallery(response.hits);\n       })\n       .catch(error => {\n           iziToast.error({\n               position: 'topRight',\n               title: 'Error',\n               message: 'Failed to fetch images. Please try again later.',\n           });\n           console.error('Error:', error);\n       })\n       .finally(() => {\n           hideLoader();\n           searchInput.value = \"\";\n       });\n\n\n\n\n}\n\n\n\n// У файлі main.js напиши всю логіку роботи додатка. Виклики нотифікацій iziToast, \n// усі перевірки на довжину масиву в отриманій відповіді робимо саме в цьому файлі. \n// Імпортуй в нього функції із файлів pixabay-api.js та render-functions.js \n// та викликай їх у відповідний момент.\n\n"],"names":["API_KEY","getImagesByQuery","query","axios","imageList","loader","lightbox","createImageCard","image","shortAlt","createGallery","images","createMurkup","SimpleLightbox","clearGallery","showLoader","hideLoader","form","searchInput","handleSubmit","event","enteredInput","iziToast","response","error"],"mappings":"owBAEA,MAAMA,EAAU,qCAET,SAASC,EAAiBC,EAAO,CACpC,OAAOC,EAAM,2BAA4B,CACrC,OAAQ,CACJ,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,CACb,CACT,CAAK,CACL,CCZA,MAAME,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIC,EAAW,KAEf,SAASC,EAAgBC,EAAO,CAC5B,MAAMC,EAAWD,EAAM,KAAK,MAAM,GAAG,EAAE,MAAM,EAAG,CAAC,EAAE,KAAK,IAAI,EAC5D,MAAO;AAAA;AAAA,mBAEQA,EAAM,aAAa;AAAA;AAAA;AAAA,uBAGfA,EAAM,YAAY;AAAA,uBAClBC,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKgBD,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,+CAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,+CAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,+CAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,KAM9D,CAEO,SAASE,EAAcC,EAAQ,CAClC,MAAMC,EAAeD,EAAO,IAAIJ,CAAe,EAAE,KAAK,EAAE,EACxDH,EAAU,mBAAmB,YAAaQ,CAAY,EAElDN,EACAA,EAAS,QAAO,EAEhBA,EAAW,IAAIO,EAAe,aAAc,CACxC,aAAc,MACd,aAAc,GAC1B,CAAS,CAET,CAEO,SAASC,GAAe,CAC3BV,EAAU,UAAY,GAClBE,IACAA,EAAS,QAAO,EAChBA,EAAW,KAEnB,CAEO,SAASS,GAAa,CACzBV,EAAO,UAAU,OAAO,QAAQ,CACpC,CAEO,SAASW,GAAa,CACzBX,EAAO,UAAU,IAAI,QAAQ,CACjC,CC9DA,MAAMY,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAc,SAAS,cAAc,QAAQ,EAGnDD,EAAK,iBAAiB,SAAUE,CAAY,EAG5C,SAASA,EAAaC,EAAO,CAC1BA,EAAM,eAAc,EACpB,MAAMC,EAAeH,EAAY,MAAM,KAAI,EAG3C,GAAI,CAACG,EAAc,CACfC,EAAS,QAAQ,CACb,SAAU,WACV,MAAO,UACP,QAAS,6BACpB,CAAQ,EACDJ,EAAY,MAAK,EACjB,MACH,CAGDH,IACAD,IAGAb,EAAiBoB,CAAY,EACxB,KAAKE,GACKA,EAAS,IACnB,EACA,KAAKA,GAAY,CACd,GAAI,CAACA,EAAS,MAAQA,EAAS,KAAK,SAAW,EAAG,CAC9CD,EAAS,QAAQ,CACb,SAAU,WACV,MAAO,UACP,QAAS,mDAC5B,CAAgB,EACD,MACH,CACDZ,EAAca,EAAS,IAAI,CACtC,CAAQ,EACA,MAAMC,GAAS,CACZF,EAAS,MAAM,CACX,SAAU,WACV,MAAO,QACP,QAAS,iDACxB,CAAY,EACD,QAAQ,MAAM,SAAUE,CAAK,CACxC,CAAQ,EACA,QAAQ,IAAM,CACXR,IACAE,EAAY,MAAQ,EAC/B,CAAQ,CAKR"}